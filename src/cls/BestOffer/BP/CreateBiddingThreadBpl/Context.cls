/// This class is generated by the BestOffer.BP.CreateBiddingThreadBpl BPL class.
/// This class should not be edited or modified in any way.
/// Do not make direct use of this class in your application.
Class BestOffer.BP.CreateBiddingThreadBpl.Context Extends BestOffer.BP.CreateBiddingThreadBpl.ContextClass [ ClassType = persistent, CompileAfter = BestOffer.BP.CreateBiddingThreadBpl, GeneratedBy = Ens.BPL.Compiler.CLS, ProcedureBlock ]
{

Storage Default
{
<Data name="ContextDefaultData1">
<Subscript>"Context"</Subscript>
<Value name="1">
<Value>BuyerEmailSubject</Value>
</Value>
</Data>
<DefaultData>ContextDefaultData1</DefaultData>
<Type>%Storage.Persistent</Type>
}

Property BuyerEmailSubject As %String(MAXLEN = 250);

/// Response Handler for call to Buyer Bid Response
Method OnResponse1(process As Ens.BusinessProcess, context As Ens.BP.Context, request As BestOffer.Message.BidThreadRequest, response As Ens.Response, callrequest As EnsLib.Workflow.TaskRequest, callresponse As EnsLib.Workflow.TaskResponse, callname As %String) As %Status [ Language = objectscript, PublicList = (process, context) ]
{
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,context.WFComments=callresponse.%Message
 If $$$ISERR(status) Quit
 Set status=$$$OK,context.Action=callresponse.%Action
 If $$$ISERR(status) Quit
 Set status=$$$OK,context.BidAmount=callresponse.%FormValues.GetAt("Bid Amount")
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("BestOffer.BP.CreateBiddingThreadBpl.Thread1","OnResponse1")
 Goto Exit
}

/// Response Handler for call to Review Buyer Bid
Method OnResponse2(process As Ens.BusinessProcess, context As Ens.BP.Context, request As BestOffer.Message.BidThreadRequest, response As Ens.Response, callrequest As EnsLib.Workflow.TaskRequest, callresponse As EnsLib.Workflow.TaskResponse, callname As %String) As %Status [ Language = objectscript, PublicList = (process, context) ]
{
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,context.WFComments=callresponse.%Message
 If $$$ISERR(status) Quit
 Set status=$$$OK,context.Action=callresponse.%Action
 If $$$ISERR(status) Quit
 Set status=$$$OK,context.CounterBidAmount=callresponse.%FormValues.GetAt("Counter Bid Amount")
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("BestOffer.BP.CreateBiddingThreadBpl.Thread1","OnResponse2")
 Goto Exit
}

}
